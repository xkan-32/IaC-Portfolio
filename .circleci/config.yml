version: 2.1
orbs:
  terraform: circleci/terraform@3.2.0
#   ansible-playbook: orbss/ansible-playbook@0.0.5

jobs:
  deploy_IaC_for_terraform:
    executor: terraform/default
    steps:
      - checkout
      - terraform/init:
          path: terraform/prod
      - terraform/validate:
          path: terraform/prod
      - terraform/validate:
          path: terraform/modules/alb
      - terraform/validate:
          path: terraform/modules/ec2
      - terraform/validate:
          path: terraform/modules/network
      - terraform/validate:
          path: terraform/modules/rds
      - terraform/validate:
          path: terraform/modules/s3
      - terraform/validate:
          path: terraform/modules/securitygroup
      - terraform/fmt:
          path: terraform/prod
      - terraform/fmt:
          path: terraform/modules/alb
      - terraform/fmt:
          path: terraform/modules/ec2
      - terraform/fmt:
          path: terraform/modules/network
      - terraform/fmt:
          path: terraform/modules/rds
      - terraform/fmt:
          path: terraform/modules/s3
      - terraform/fmt:
          path: terraform/modules/securitygroup
      - terraform/plan:
          var:
            'CIRCLECI_RDS_PASSWORD=${CIRCLECI_RDS_PASSWORD}'
          path: terraform/prod
      - terraform/apply:
          var:
            'CIRCLECI_RDS_PASSWORD=${CIRCLECI_RDS_PASSWORD}'
          path: terraform/prod
      - run:
          name: Refresh Terraform state
          command: |
            terraform refresh
    #   - terraform/destroy:
    #       var:
    #         'CIRCLECI_RDS_PASSWORD=${CIRCLECI_RDS_PASSWORD}'
    #       path: terraform/prod
      - run:
          name: get output data rds endpoint
          command: |
            mkdir -p /tmp/workspace
            echo "$(terraform output CircleCITeradaDatabasesoutputs)" > /tmp/workspace/rds_endpoint.txt
            cat /tmp/workspace/rds_endpoint.txt
      - run:
          name: get output data alb dns
          command: |
            echo "$(terraform output TeradaALBsoutputs)" > /tmp/workspace/alb_dns_name.txt
            cat /tmp/workspace/alb_dns_name.txt
      - run:
          name: get output data EC2 ID
          command: |
            echo "$(terraform output EC2Instanceoutputs1)" > /tmp/workspace/ec2_id_1.txt
            cat /tmp/workspace/ec2_id_1.txt
            echo "$(terraform output EC2Instanceoutputs2)" > /tmp/workspace/ec2_id_2.txt
            cat /tmp/workspace/ec2_id_2.txt
      - run:
          name: get output data EC2 IP
          command: |
            echo "$(terraform output EC2InstanceoutputsIP1)" > /tmp/workspace/ec2_ip_1.txt
            cat /tmp/workspace/ec2_ip_1.txt
            echo "$(terraform output EC2InstanceoutputsIP2)" > /tmp/workspace/ec2_ip_2.txt
            cat /tmp/workspace/ec2_ip_2.txt

#   executeAnsible:
#     executor: ansible-playbook/default
#     steps:
#       - checkout
#       - add_ssh_keys:
#           fingerprints:
#             - 2a:c5:6b:40:59:d0:07:89:47:7d:4b:0c:ff:5b:69:f0
#       - ansible-playbook/install:
#           version: '2.10.7'
#       - attach_workspace:
#           at: /tmp/workspace
#       - run: cat /tmp/workspace/rds_endpoint.txt
#       - run: cat /tmp/workspace/rds_endpoint.txt
#       - run: cat /tmp/workspace/rds_endpoint.txt
#       - run: cat /tmp/workspace/rds_endpoint.txt
workflows:
  IaC-Portfolio:
    jobs:
      - deploy_IaC_for_terraform